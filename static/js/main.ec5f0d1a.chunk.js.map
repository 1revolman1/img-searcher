{"version":3,"sources":["pages/Home/styled.jsx","components/Image/styled.jsx","components/Image/index.jsx","userHooks/localstorage/index.jsx","pages/Home/index.jsx","pages/Favourite/styled.jsx","pages/Favourite/index.jsx","App.js","serviceWorker.js","index.js","components/Image/assets/expand-svgrepo-com.svg"],"names":["GoogleWrapper","styled","div","ControlPanelDiv","StyledInput","input","StyledCounter","ImgBar","ImgBarContainer","DownloadNew","StyledCard","StyledInformation","StyledExpand","StyledInfavourite","Index","props","data","id","previewURL","largeImageURL","localstore","setLocalStore","useState","bigShow","setBigShow","favourite","setFavourite","img","useRef","useEffect","filter","element","length","className","ref","src","alt","onClick","result","localStorage","setItem","JSON","stringify","require","useFavouriteLogic","localStore","getItem","parse","Home","text","ammounOfQueries","currentPage","nowData","posts","query","setQuery","doSearching","page","current","fetch","then","res","json","Newposts","total","hits","onSubmit","event","preventDefault","onInput","target","value","type","map","index","key","StyledHeaderBlock","StyledImgContainer","Favourite","image","Nav","nav","App","to","exact","path","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","console","message","module","exports"],"mappings":"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","file":"static/js/main.ec5f0d1a.chunk.js","sourcesContent":["import styled from \"styled-components\";\r\nexport const GoogleWrapper = styled.div`\r\n  /* overflow-y: scroll;\r\n  height: 100vh; */\r\n  /* position: absolute;\r\n  top: 0; */\r\n`;\r\nexport const ControlPanelDiv = styled.div`\r\n  width: 90%;\r\n  margin: 0 auto;\r\n  margin-top: 0px;\r\n  display: flex;\r\n  flex-direction: row;\r\n  justify-content: space-between;\r\n`;\r\nexport const StyledInput = styled.input`\r\n  width: 70%;\r\n  padding: 10px;\r\n  font-size: 1.5rem;\r\n`;\r\nexport const StyledCounter = styled.div`\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  border: 2px solid black;\r\n  padding: 15px;\r\n  span {\r\n    text-align: center;\r\n  }\r\n`;\r\nexport const ImgBar = styled.div`\r\n  width: 90%;\r\n  margin: 0 auto;\r\n  }\r\n`;\r\nexport const ImgBarContainer = styled.div`\r\n  margin-top: 20px;\r\n  display: flex;\r\n  flex-direction: row;\r\n  flex-wrap: wrap;\r\n  width: 74%;\r\n  &:empty {\r\n    display: none;\r\n  }\r\n`;\r\nexport const DownloadNew = styled.div`\r\n  margin: 20px 0;\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  button {\r\n    color: rgba(0, 0, 0, 0.87);\r\n    padding: 6px 16px;\r\n    font-size: 0.875rem;\r\n    min-width: 64px;\r\n    box-sizing: border-box;\r\n    transition: background-color 250ms cubic-bezier(0.4, 0, 0.2, 1) 0ms,\r\n      box-shadow 250ms cubic-bezier(0.4, 0, 0.2, 1) 0ms,\r\n      border 250ms cubic-bezier(0.4, 0, 0.2, 1) 0ms;\r\n    font-family: \"Roboto\", \"Helvetica\", \"Arial\", sans-serif;\r\n    font-weight: 500;\r\n    line-height: 1.75;\r\n    border-radius: 4px;\r\n    letter-spacing: 0.02857em;\r\n    text-transform: uppercase;\r\n    background-color: #1976d2;\r\n    outline: none;\r\n    border: none;\r\n    color: rgba(0, 0, 0, 0.87);\r\n    box-shadow: 0px 3px 1px -2px rgba(0, 0, 0, 0.2),\r\n      0px 2px 2px 0px rgba(0, 0, 0, 0.14), 0px 1px 5px 0px rgba(0, 0, 0, 0.12);\r\n    background-color: #1976d2;\r\n    &:hover {\r\n      background-color: rgb(17, 82, 147);\r\n      box-shadow: 0px 2px 4px -1px rgba(0, 0, 0, 0.2),\r\n        0px 4px 5px 0px rgba(0, 0, 0, 0.14),\r\n        0px 1px 10px 0px rgba(0, 0, 0, 0.12);\r\n    }\r\n  }\r\n`;\r\n","import styled from \"styled-components\";\r\nexport const StyledCard = styled.div`\r\n  position: relative;\r\n  width: 100%;\r\n  max-width: 20%;\r\n  &.bigShow {\r\n    position: fixed;\r\n    top: 50%;\r\n    left: 50%;\r\n    width: 100%;\r\n    height: 100%;\r\n    transform: translate(-50%, -50%);\r\n    z-index: 1;\r\n    max-width: inherit;\r\n    background: rgba(0, 0, 0, 0.3);\r\n    .opened {\r\n      transition: none;\r\n      opacity: 1;\r\n      width: 70%;\r\n      height: 70%;\r\n      top: 50%;\r\n      left: 50%;\r\n      transform: translate(-50%, -50%);\r\n      background: initial;\r\n    }\r\n    img {\r\n      width: 70%;\r\n      height: 70%;\r\n      position: absolute;\r\n      top: 50%;\r\n      left: 50%;\r\n      transform: translate(-50%, -50%);\r\n    }\r\n  }\r\n  img {\r\n    width: 100%;\r\n    height: 100%;\r\n    object-fit: cover;\r\n  }\r\n`;\r\nexport const StyledInformation = styled.div`\r\n  opacity: 0;\r\n  position: absolute;\r\n  top: 0;\r\n  left: 0;\r\n  width: 100%;\r\n  height: 100%;\r\n  transition: all 0.5s linear;\r\n  &:hover {\r\n    opacity: 1;\r\n    background: rgba(255, 255, 255, 0.4);\r\n  }\r\n`;\r\nexport const StyledExpand = styled.div`\r\n  position: absolute;\r\n  bottom: 5px;\r\n  right: 5px;\r\n  width: 15px;\r\n  height: 15px;\r\n  img {\r\n    width: 100%;\r\n    object-fit: cover;\r\n  }\r\n  &.expanded {\r\n    width: 50px;\r\n    height: 50px;\r\n  }\r\n`;\r\nexport const StyledInfavourite = styled.div`\r\n  position: relative;\r\n  &.closed {\r\n    .vertical {\r\n      transition: all 0.5s ease-in-out;\r\n      transform: translate(-50%, -50%) rotate(-90deg);\r\n    }\r\n    .horizontal {\r\n      transition: all 0.5s ease-in-out;\r\n      transform: translate(-50%, -50%) rotate(-90deg);\r\n      opacity: 1;\r\n    }\r\n  }\r\n  &.opened {\r\n    opacity: 1;\r\n    .vertical {\r\n      transition: all 0.5s ease-in-out;\r\n      transform: translate(-50%, -50%) rotate(90deg);\r\n    }\r\n    .horizontal {\r\n      transition: all 0.5s ease-in-out;\r\n      transform: translate(-50%, -50%) rotate(90deg);\r\n      opacity: 0;\r\n    }\r\n  }\r\n\r\n  .circle {\r\n    position: absolute;\r\n    top: 5px;\r\n    left: 5px;\r\n    width: 10px;\r\n    height: 10px;\r\n    .horizontal {\r\n      position: absolute;\r\n      background-color: red;\r\n      width: 15px;\r\n      height: 5px;\r\n      left: 50%;\r\n      top: 50%;\r\n    }\r\n    .vertical {\r\n      position: absolute;\r\n      background-color: red;\r\n      width: 5px;\r\n      height: 15px;\r\n      left: 50%;\r\n      top: 50%;\r\n    }\r\n  }\r\n`;\r\n","import React, { useState, useEffect, useRef } from \"react\";\r\nimport {\r\n  StyledCard,\r\n  StyledInformation,\r\n  StyledExpand,\r\n  StyledInfavourite,\r\n} from \"./styled\";\r\nexport default function Index(props) {\r\n  const { id, previewURL, largeImageURL } = props.data;\r\n  const [localstore, setLocalStore] = props.localstore;\r\n  const [bigShow, setBigShow] = useState(false);\r\n  const [favourite, setFavourite] = useState(false);\r\n  const img = useRef();\r\n  useEffect(() => {\r\n    let found =\r\n      localstore.filter((element) => {\r\n        return element.id === id;\r\n      }).length > 0;\r\n    found && setFavourite(true);\r\n    return () => {\r\n      setFavourite(false);\r\n    };\r\n  }, [id, localstore]);\r\n  const addToFavourite = function () {\r\n    let result;\r\n    if (favourite) {\r\n      // УДАЛИТЬ ИЗ ИЗБРАННОГо\r\n      result = localstore.filter((element) => {\r\n        return element.id !== id;\r\n      });\r\n      localStorage.setItem(\"favourite\", JSON.stringify(result));\r\n      setLocalStore(result);\r\n    } else {\r\n      //ДОБАВИТЬ В ИЗБРАННОЕ\r\n      result = [...localstore, props.data];\r\n      localStorage.setItem(\"favourite\", JSON.stringify(result));\r\n      setLocalStore(result);\r\n    }\r\n    setFavourite(!favourite);\r\n  };\r\n  return (\r\n    <StyledCard className={bigShow ? \"bigShow\" : \"smallShow\"}>\r\n      <img ref={img} src={bigShow ? largeImageURL : previewURL} alt=\"\" />\r\n      <StyledInformation className=\"opened\">\r\n        <StyledInfavourite\r\n          className={favourite ? \"opened\" : \"closed\"}\r\n          onClick={addToFavourite}\r\n        >\r\n          <div className=\"circle\">\r\n            <div className=\"horizontal\"></div>\r\n            <div className=\"vertical\"></div>\r\n          </div>\r\n        </StyledInfavourite>\r\n        <StyledExpand\r\n          className={bigShow ? \"expanded\" : \"minified\"}\r\n          onClick={() => {\r\n            setBigShow(!bigShow);\r\n          }}\r\n        >\r\n          <img src={require(\"./assets/expand-svgrepo-com.svg\")} alt=\"\" />\r\n        </StyledExpand>\r\n      </StyledInformation>\r\n    </StyledCard>\r\n  );\r\n}\r\n","import { useState, useEffect } from \"react\";\r\n\r\nexport default function useFavouriteLogic(props = []) {\r\n  const [localStore, setLocalStore] = useState(props);\r\n\r\n  useEffect(() => {\r\n    !localStorage.getItem(\"favourite\") &&\r\n      localStorage.setItem(\"favourite\", JSON.stringify([]));\r\n    setLocalStore(JSON.parse(localStorage.getItem(\"favourite\")));\r\n  }, []);\r\n\r\n  return [localStore, setLocalStore];\r\n}\r\n","import React, { useState, useEffect, useRef } from \"react\";\r\nimport {\r\n  ControlPanelDiv,\r\n  StyledInput,\r\n  StyledCounter,\r\n  ImgBar,\r\n  ImgBarContainer,\r\n  GoogleWrapper,\r\n  DownloadNew,\r\n} from \"./styled\";\r\nimport Image from \"../../components/Image\";\r\nimport useFavouriteLogic from \"../../userHooks/localstorage\";\r\nimport StackGrid from \"react-stack-grid\";\r\n\r\nconst key = \"17361687-a101acdabc6a7719b500f899f\";\r\n\r\nexport default function Home() {\r\n  const text = useRef(null);\r\n  const ammounOfQueries = useRef(0);\r\n  const currentPage = useRef(1);\r\n  const nowData = useRef([]);\r\n  const [query, setQuery] = useState({ text: \"\", posts: [] });\r\n  const localStore = useFavouriteLogic([]);\r\n  const doSearching = function (text, page) {\r\n    if (query.text !== text) {\r\n      currentPage.current = 1;\r\n    } else {\r\n      currentPage.current = page + 1;\r\n    }\r\n    fetch(\r\n      `https://pixabay.com/api/?key=${key}&q=${text}&image_type=photo&pretty=true&page=${currentPage.current}`\r\n    )\r\n      .then((res) => res.json())\r\n      .then((Newposts) => {\r\n        ammounOfQueries.current = Newposts.total;\r\n        nowData.current = Newposts.hits;\r\n        if (query.text !== text) {\r\n          setQuery({ text, posts: Newposts.hits });\r\n        } else {\r\n          setQuery({ text, posts: [...query.posts, ...Newposts.hits] });\r\n        }\r\n      });\r\n  };\r\n\r\n  return (\r\n    <GoogleWrapper className=\"page-google\">\r\n      <form\r\n        id=\"form\"\r\n        onSubmit={(event) => {\r\n          event.preventDefault();\r\n          doSearching(text.current, currentPage.current);\r\n        }}\r\n      >\r\n        <ControlPanelDiv>\r\n          <StyledInput\r\n            onInput={(event) => {\r\n              text.current = event.target.value;\r\n            }}\r\n            type=\"text\"\r\n          />\r\n\r\n          <StyledCounter>\r\n            <span>{ammounOfQueries.current ? ammounOfQueries.current : 0}</span>\r\n          </StyledCounter>\r\n        </ControlPanelDiv>\r\n      </form>\r\n      <ImgBar>\r\n        <ImgBarContainer>\r\n          {query.posts.length > 0 &&\r\n            query.posts.map((element, index) => {\r\n              return (\r\n                <Image\r\n                  key={`${index}KeyElement${element.id}`}\r\n                  data={element}\r\n                  localstore={localStore}\r\n                />\r\n              );\r\n            })}\r\n        </ImgBarContainer>\r\n      </ImgBar>\r\n      {query.posts.length > 10 && nowData.current.length > 0 && (\r\n        <DownloadNew>\r\n          <button\r\n            onClick={() => {\r\n              doSearching(text.current, currentPage.current);\r\n            }}\r\n          >\r\n            Загрузить еще!\r\n          </button>\r\n        </DownloadNew>\r\n      )}\r\n    </GoogleWrapper>\r\n  );\r\n}\r\n","import styled from \"styled-components\";\r\n\r\nexport const StyledHeaderBlock = styled.div`\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n`;\r\nexport const StyledImgContainer = styled.div`\r\n  display: flex;\r\n  flex-wrap: wrap;\r\n  border: 2px solid red;\r\n  width: 80%;\r\n  margin: 0 auto;\r\n  & > div:not(.bigShow) {\r\n    margin: 20px;\r\n  }\r\n`;\r\n","import React from \"react\";\r\nimport Image from \"../../components/Image\";\r\nimport useFavouriteLogic from \"../../userHooks/localstorage\";\r\nimport { StyledHeaderBlock, StyledImgContainer } from \"./styled\";\r\nexport default function Favourite() {\r\n  const localStore = useFavouriteLogic([]);\r\n  const [localstore] = localStore;\r\n  return (\r\n    <>\r\n      <StyledHeaderBlock>\r\n        <h1>Favourite</h1>\r\n      </StyledHeaderBlock>\r\n      <StyledImgContainer>\r\n        {localstore.length > 0 &&\r\n          localstore.map((image, index) => {\r\n            return (\r\n              <Image\r\n                key={`${index}KeyElement${image.id}`}\r\n                data={image}\r\n                localstore={localStore}\r\n              />\r\n            );\r\n          })}\r\n      </StyledImgContainer>\r\n    </>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport { BrowserRouter as Router, Switch, Route, Link } from \"react-router-dom\";\r\nimport Home from \"./pages/Home\";\r\nimport Favourite from \"./pages/Favourite\";\r\nimport styled from \"styled-components\";\r\nconst Nav = styled.nav`\r\n  ul {\r\n    display: flex;\r\n    flex-direction: row;\r\n    justify-content: space-around;\r\n    li {\r\n      list-style: none;\r\n    }\r\n  }\r\n`;\r\nexport default function App() {\r\n  // TODO: Make loader for img-preloader\r\n  // TODO: Store favorite data to local storage\r\n  return (\r\n    <Router>\r\n      <div>\r\n        <Nav>\r\n          <ul>\r\n            <li>\r\n              <Link to=\"/\">Home</Link>\r\n            </li>\r\n            <li>\r\n              <Link to=\"/favorite\">Favorite</Link>\r\n            </li>\r\n          </ul>\r\n        </Nav>\r\n        <Switch>\r\n          <Route exact path=\"/\">\r\n            <Home />\r\n          </Route>\r\n          <Route exact path=\"/favorite\">\r\n            <Favourite />\r\n          </Route>\r\n        </Switch>\r\n      </div>\r\n    </Router>\r\n  );\r\n}\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n","module.exports = __webpack_public_path__ + \"static/media/expand-svgrepo-com.9d3f0971.svg\";"],"sourceRoot":""}