{"version":3,"sources":["pages/Home/Image/assets/expand-svgrepo-com.svg","pages/Home/styled.jsx","pages/Home/Image/styled.jsx","pages/Home/Image/hooks.jsx","pages/Home/Image/index.jsx","pages/Home/index.jsx","App.js","serviceWorker.js","index.js"],"names":["module","exports","GoogleWrapper","styled","div","ControlPanelDiv","StyledInput","input","StyledCounter","ImgBar","ImgBarContainer","DownloadNew","StyledCard","StyledInformation","StyledExpand","reducer","currentSrc","action","type","src","Index","props","data","id","previewURL","largeImageURL","useState","bigShow","setBigShow","imgSrc","useRef","fallbackSrc","useReducer","dispatch","useEffect","mainImage","Image","fallbackImage","onload","useProgressiveImage","className","key","alt","onClick","console","log","require","Home","text","ammounOfQueries","currentPage","posts","query","setQuery","doSearching","page","current","fetch","then","res","json","Newposts","total","hits","onSubmit","event","preventDefault","onInput","target","value","length","map","element","index","Nav","nav","App","to","exact","path","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.9b27efd0.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/expand-svgrepo-com.9d3f0971.svg\";","import styled from \"styled-components\";\r\nexport const GoogleWrapper = styled.div`\r\n  /* overflow-y: scroll;\r\n  height: 100vh; */\r\n  /* position: absolute;\r\n  top: 0; */\r\n`;\r\nexport const ControlPanelDiv = styled.div`\r\n  width: 90%;\r\n  margin: 0 auto;\r\n  margin-top: 0px;\r\n  display: flex;\r\n  flex-direction: row;\r\n  justify-content: space-between;\r\n`;\r\nexport const StyledInput = styled.input`\r\n  width: 70%;\r\n  padding: 10px;\r\n  font-size: 1.5rem;\r\n`;\r\nexport const StyledCounter = styled.div`\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  border: 2px solid black;\r\n  padding: 15px;\r\n  span {\r\n    text-align: center;\r\n  }\r\n`;\r\nexport const ImgBar = styled.div`\r\n  width: 90%;\r\n  margin: 0 auto;\r\n  }\r\n`;\r\nexport const ImgBarContainer = styled.div`\r\n  margin-top: 20px;\r\n  display: flex;\r\n  flex-direction: row;\r\n  flex-wrap: wrap;\r\n  width: 74%;\r\n  &:empty {\r\n    display: none;\r\n  }\r\n`;\r\nexport const DownloadNew = styled.div`\r\n  margin: 20px 0;\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  button {\r\n    color: rgba(0, 0, 0, 0.87);\r\n    padding: 6px 16px;\r\n    font-size: 0.875rem;\r\n    min-width: 64px;\r\n    box-sizing: border-box;\r\n    transition: background-color 250ms cubic-bezier(0.4, 0, 0.2, 1) 0ms,\r\n      box-shadow 250ms cubic-bezier(0.4, 0, 0.2, 1) 0ms,\r\n      border 250ms cubic-bezier(0.4, 0, 0.2, 1) 0ms;\r\n    font-family: \"Roboto\", \"Helvetica\", \"Arial\", sans-serif;\r\n    font-weight: 500;\r\n    line-height: 1.75;\r\n    border-radius: 4px;\r\n    letter-spacing: 0.02857em;\r\n    text-transform: uppercase;\r\n    background-color: #1976d2;\r\n    outline: none;\r\n    border: none;\r\n    color: rgba(0, 0, 0, 0.87);\r\n    box-shadow: 0px 3px 1px -2px rgba(0, 0, 0, 0.2),\r\n      0px 2px 2px 0px rgba(0, 0, 0, 0.14), 0px 1px 5px 0px rgba(0, 0, 0, 0.12);\r\n    background-color: #1976d2;\r\n    &:hover {\r\n      background-color: rgb(17, 82, 147);\r\n      box-shadow: 0px 2px 4px -1px rgba(0, 0, 0, 0.2),\r\n        0px 4px 5px 0px rgba(0, 0, 0, 0.14),\r\n        0px 1px 10px 0px rgba(0, 0, 0, 0.12);\r\n    }\r\n  }\r\n`;\r\n","import styled from \"styled-components\";\r\nexport const StyledCard = styled.div`\r\n  position: relative;\r\n  width: 100%;\r\n  max-width: 20%;\r\n  /* max-width: 19%; */\r\n  /* border: 2px solid black; */\r\n  &.bigShow {\r\n    position: fixed;\r\n    top: 50%;\r\n    left: 50%;\r\n    width: 100%;\r\n    height: 100%;\r\n    /* width: 70%;\r\n    height: 70%; */\r\n    transform: translate(-50%, -50%);\r\n    z-index: 1;\r\n    max-width: inherit;\r\n    background: rgba(0, 0, 0, 0.3);\r\n    .opened {\r\n      transition: none;\r\n      opacity: 1;\r\n      width: 70%;\r\n      height: 70%;\r\n      top: 50%;\r\n      left: 50%;\r\n      transform: translate(-50%, -50%);\r\n      background: initial;\r\n    }\r\n    img {\r\n      width: 70%;\r\n      height: 70%;\r\n      position: absolute;\r\n      top: 50%;\r\n      left: 50%;\r\n      transform: translate(-50%, -50%);\r\n    }\r\n  }\r\n  img {\r\n    width: 100%;\r\n    height: 100%;\r\n    object-fit: cover;\r\n  }\r\n`;\r\nexport const StyledInformation = styled.div`\r\n  opacity: 0;\r\n  position: absolute;\r\n  top: 0;\r\n  left: 0;\r\n  width: 100%;\r\n  height: 100%;\r\n  transition: all 0.5s linear;\r\n  &:hover {\r\n    opacity: 1;\r\n    background: rgba(0, 0, 0, 0.4);\r\n  }\r\n  .closed {\r\n    .vertical {\r\n      transition: all 0.5s ease-in-out;\r\n      transform: translate(-50%, -50%) rotate(-90deg);\r\n    }\r\n    .horizontal {\r\n      transition: all 0.5s ease-in-out;\r\n      transform: translate(-50%, -50%) rotate(-90deg);\r\n      opacity: 1;\r\n    }\r\n  }\r\n\r\n  .opened {\r\n    opacity: 1;\r\n    .vertical {\r\n      transition: all 0.5s ease-in-out;\r\n      transform: translate(-50%, -50%) rotate(90deg);\r\n    }\r\n    .horizontal {\r\n      transition: all 0.5s ease-in-out;\r\n      transform: translate(-50%, -50%) rotate(90deg);\r\n      opacity: 0;\r\n    }\r\n  }\r\n\r\n  .circle {\r\n    position: absolute;\r\n    top: 5px;\r\n    left: 5px;\r\n    width: 10px;\r\n    height: 10px;\r\n    .horizontal {\r\n      position: absolute;\r\n      background-color: red;\r\n      width: 15px;\r\n      height: 5px;\r\n      left: 50%;\r\n      top: 50%;\r\n    }\r\n    .vertical {\r\n      position: absolute;\r\n      background-color: red;\r\n      width: 5px;\r\n      height: 15px;\r\n      left: 50%;\r\n      top: 50%;\r\n    }\r\n  }\r\n`;\r\nexport const StyledExpand = styled.div`\r\n  position: absolute;\r\n  bottom: 5px;\r\n  right: 5px;\r\n  width: 15px;\r\n  height: 15px;\r\n  img {\r\n    width: 100%;\r\n    object-fit: cover;\r\n  }\r\n  &.expanded {\r\n    width: 50px;\r\n    height: 50px;\r\n  }\r\n`;\r\n","import { useReducer, useEffect } from \"react\";\r\n// TODO https://www.selbekk.io/blog/2019/05/how-to-write-a-progressive-image-loading-hook/\r\nfunction reducer(currentSrc, action) {\r\n  if (action.type === \"main image loaded\") {\r\n    return action.src;\r\n  }\r\n  if (!currentSrc) {\r\n    return action.src;\r\n  }\r\n  return currentSrc;\r\n}\r\n\r\nexport default function useProgressiveImage({ src, fallbackSrc }) {\r\n  const [currentSrc, dispatch] = useReducer(reducer, null);\r\n  useEffect(() => {\r\n    const mainImage = new Image();\r\n    const fallbackImage = new Image();\r\n\r\n    mainImage.onload = () => {\r\n      dispatch({ type: \"main image loaded\", src });\r\n    };\r\n    fallbackImage.onload = () => {\r\n      dispatch({ type: \"fallback image loaded\", src: fallbackSrc });\r\n    };\r\n\r\n    mainImage.src = src;\r\n    fallbackImage.src = fallbackSrc;\r\n  }, [src, fallbackSrc]);\r\n\r\n  return currentSrc;\r\n}\r\n","import React, { useState, useRef } from \"react\";\r\nimport { StyledCard, StyledInformation, StyledExpand } from \"./styled\";\r\nimport useProgressiveImage from \"./hooks\";\r\nexport default function Index(props) {\r\n  const { id, previewURL, largeImageURL } = props.data;\r\n  const [bigShow, setBigShow] = useState(false);\r\n  const img = useRef();\r\n  const imgSrc = useProgressiveImage({\r\n    src: largeImageURL,\r\n    fallbackSrc: previewURL,\r\n  });\r\n  return (\r\n    <StyledCard\r\n      className={bigShow ? \"bigShow\" : \"smallShow\"}\r\n      key={`Unique${id}`}\r\n    >\r\n      <img\r\n        src={imgSrc}\r\n        // src={bigShow ? largeImageURL : previewURL}\r\n        alt=\"\"\r\n        // onLoad={(e) => {\r\n        //   console.log(e, img.current.complete);\r\n        // }}\r\n      />\r\n      <StyledInformation className=\"opened\">\r\n        <div\r\n          className=\"circle-plus closed\"\r\n          onClick={() => {\r\n            console.log(props.data);\r\n            // if (!localStorage.getItem(\"favourite\"))\r\n            //   localStorage.setItem(\"favourite\", []);\r\n            //   [...JSON.parse(localStorage.getItem(\"favourite\")), ...props.data]\r\n            // localStorage.setItem(\r\n            //   \"favourite\",\r\n            //   JSON.stringify([\r\n            //     ...JSON.parse(\"favourite\", localStorage.getItem(\"favourite\")),\r\n            //     ...props.data,\r\n            //   ])\r\n            // );\r\n          }}\r\n        >\r\n          <div className=\"circle\">\r\n            <div className=\"horizontal\"></div>\r\n            <div className=\"vertical\"></div>\r\n          </div>\r\n        </div>\r\n        <StyledExpand\r\n          className={bigShow ? \"expanded\" : \"minified\"}\r\n          onClick={() => {\r\n            setBigShow(!bigShow);\r\n          }}\r\n        >\r\n          <img src={require(\"./assets/expand-svgrepo-com.svg\")} alt=\"\" />\r\n        </StyledExpand>\r\n      </StyledInformation>\r\n    </StyledCard>\r\n  );\r\n}\r\n","import React, { useState, useEffect, useRef } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport {\r\n  ControlPanelDiv,\r\n  StyledInput,\r\n  StyledCounter,\r\n  ImgBar,\r\n  ImgBarContainer,\r\n  GoogleWrapper,\r\n  DownloadNew,\r\n} from \"./styled\";\r\nimport Image from \"./Image\";\r\nconst key = \"17361687-a101acdabc6a7719b500f899f\";\r\n\r\nexport default function Home() {\r\n  const text = useRef(null);\r\n  const ammounOfQueries = useRef(0);\r\n  const currentPage = useRef(1);\r\n  const [query, setQuery] = useState({ text: \"\", posts: [] });\r\n  const doSearching = function (text, page) {\r\n    if (query.text !== text) {\r\n      currentPage.current = 1;\r\n    } else {\r\n      currentPage.current = page + 1;\r\n    }\r\n    fetch(\r\n      `https://pixabay.com/api/?key=${key}&q=${text}&image_type=photo&pretty=true&page=${currentPage.current}`\r\n    )\r\n      .then((res) => res.json())\r\n      .then((Newposts) => {\r\n        ammounOfQueries.current = Newposts.total;\r\n        if (query.text !== text) {\r\n          setQuery({ text, posts: Newposts.hits });\r\n        } else {\r\n          setQuery({ text, posts: [...query.posts, ...Newposts.hits] });\r\n        }\r\n      });\r\n  };\r\n  return (\r\n    <GoogleWrapper className=\"page-google\">\r\n      <form\r\n        id=\"form\"\r\n        onSubmit={(event) => {\r\n          event.preventDefault();\r\n          doSearching(text.current, currentPage.current);\r\n        }}\r\n      >\r\n        <ControlPanelDiv>\r\n          <StyledInput\r\n            onInput={(event) => {\r\n              text.current = event.target.value;\r\n            }}\r\n            type=\"text\"\r\n          />\r\n\r\n          <StyledCounter>\r\n            <span>{ammounOfQueries.current ? ammounOfQueries.current : 0}</span>\r\n          </StyledCounter>\r\n        </ControlPanelDiv>\r\n      </form>\r\n      <ImgBar>\r\n        <ImgBarContainer>\r\n          {query.posts.length > 0 &&\r\n            query.posts.map((element, index) => {\r\n              return <Image key={index} data={element} />;\r\n            })}\r\n        </ImgBarContainer>\r\n      </ImgBar>\r\n      {query.posts.length > 10 && (\r\n        <DownloadNew>\r\n          <button\r\n            onClick={() => {\r\n              doSearching(text.current, currentPage.current);\r\n            }}\r\n          >\r\n            Загрузить еще!\r\n          </button>\r\n        </DownloadNew>\r\n      )}\r\n    </GoogleWrapper>\r\n  );\r\n}\r\n","import React from \"react\";\nimport { BrowserRouter as Router, Switch, Route, Link } from \"react-router-dom\";\nimport Home from \"./pages/Home/index\";\nimport styled from \"styled-components\";\nconst Nav = styled.nav`\n  ul {\n    display: flex;\n    flex-direction: row;\n    justify-content: space-around;\n    li {\n      list-style: none;\n    }\n  }\n`;\nexport default function App() {\n  // TODO: Make loader for img-preloader\n  // TODO: Store favorite data to local storage\n  return (\n    <Router>\n      <div>\n        <Nav>\n          <ul>\n            <li>\n              <Link to=\"/\">Home</Link>\n            </li>\n            <li>\n              <Link to=\"/favorite\">Favorite</Link>\n            </li>\n          </ul>\n        </Nav>\n        <Switch>\n          <Route exact path=\"/\">\n            <Home />\n          </Route>\n          <Route exact path=\"/favorite\">\n            <h1>Hello Word!</h1>\n          </Route>\n        </Switch>\n      </div>\n    </Router>\n  );\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}